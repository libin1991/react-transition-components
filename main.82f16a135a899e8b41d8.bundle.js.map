{"version":3,"file":"main.82f16a135a899e8b41d8.bundle.js","sources":["webpack:///./src/components/ClipTransition/index.tsx"],"sourcesContent":["import createTransition from '../../createTransition';\nimport { TransitionComponentProps, TweenProp } from '../../types';\n\nexport enum shapes {\n  circle = 'circle',\n  ellipse = 'ellipse',\n  inset = 'inset',\n  polygon = 'polygon',\n}\n\ntype Props = TransitionComponentProps & {\n  shape?: shapes;\n  circle?: TweenProp;\n  ellipse?: TweenProp;\n  inset?: TweenProp;\n  polygon?: TweenProp;\n};\n\nconst crossBrowserClipPath = (value) => ({\n  WebkitClipPath: value,\n  clipPath: value,\n});\n\nconst shapesConfig = {\n  [shapes.circle]: {\n    from: ({ circle }) => crossBrowserClipPath(`circle(${circle.start})`),\n    enter: ({ circle }) => crossBrowserClipPath(`circle(${circle.end})`),\n  },\n  [shapes.ellipse]: {\n    from: ({ ellipse }) => crossBrowserClipPath(`ellipse(${ellipse.start})`),\n    enter: ({ ellipse }) => crossBrowserClipPath(`ellipse(${ellipse.end})`),\n  },\n  [shapes.inset]: {\n    from: ({ inset }) => crossBrowserClipPath(`inset(${inset.start})`),\n    enter: ({ inset }) => crossBrowserClipPath(`inset(${inset.end})`),\n  },\n  [shapes.polygon]: {\n    from: ({ polygon }) => crossBrowserClipPath(`polygon(${polygon.start})`),\n    enter: ({ polygon }) => crossBrowserClipPath(`polygon(${polygon.end})`),\n  },\n}\n\nconst ClipTransition: React.SFC<Props> = createTransition({\n  from: (props) => shapesConfig[props.shape].from(props),\n  enter: (props) => shapesConfig[props.shape].enter(props),\n});\n\nClipTransition.defaultProps = {\n  ...ClipTransition.defaultProps,\n  shape: shapes.circle,\n  circle: { start: '0% at 50% 50%', end: '100% at 50% 50%' },\n  ellipse: { start: '50% 0% at 50% 50%', end: '100% 100% at 50% 50%' },\n  inset: { start: '0% 100% 100% 0%', end: '0% 0% 0% 0%' },\n  polygon: { start: '', end: '' },\n};\n\nClipTransition.displayName = 'ClipTransition';\n\nexport default ClipTransition;\n"],"mappings":"AAGA","sourceRoot":""}